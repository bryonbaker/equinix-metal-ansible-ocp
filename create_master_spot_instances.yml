---
- name: Create 3 Spot Instances on Equinix Metal
  hosts: localhost
  vars_files:
    - vars/equinix_metal_vars.yml
  tasks:
    - name: Check if VLAN 505 exists
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: GET
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
        return_content: yes
      register: vlan_505_check

    - name: Create VLAN 505
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: POST
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
          Content-Type: application/json
        body_format: json
        body:
          description: "VLAN 505"
          metro: "sy"
          vxlan: 505
      register: vlan_505
      when: vlan_505_check.json.virtual_networks | selectattr('vxlan', 'equalto', 505) | list | length == 0

    - name: Check if VLAN 10 exists
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: GET
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
        return_content: yes
      register: vlan_10_check

    - name: Create VLAN 10
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: POST
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
          Content-Type: application/json
        body_format: json
        body:
          description: "VLAN 10"
          metro: "sy"
          vxlan: 10
      register: vlan_10
      when: vlan_10_check.json.virtual_networks | selectattr('vxlan', 'equalto', 10) | list | length == 0

    - name: Check if VLAN 506 exists
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: GET
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
        return_content: yes
      register: vlan_506_check

    - name: Create VLAN 506
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/virtual-networks
        method: POST
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
          Content-Type: application/json
        body_format: json
        body:
          description: "VLAN 506"
          metro: "sy"
          vxlan: 506
      register: vlan_506
      when: vlan_506_check.json.virtual_networks | selectattr('vxlan', 'equalto', 506) | list | length == 0

    - name: Check for existing instances
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/devices
        method: GET
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
        return_content: yes
      register: instance_check

    - name: Filter existing instances
      set_fact:
        existing_instances: "{{ instance_check.json.devices | selectattr('hostname', 'match', 'master\\d+.heavy-metal.digitaldovey.net') | map(attribute='hostname') | list }}"

    - name: Create spot instances
      uri:
        url: https://api.equinix.com/metal/v1/projects/{{ equinix_metal_project_id }}/devices
        method: POST
        headers:
          X-Auth-Token: "{{ equinix_metal_api_token }}"
          Content-Type: application/json
        body_format: json
        body: |
          {
            "hostname": "{{ item }}",
            #"plan": "c3.small.x86",
            "plan": "m3.small.x86",
            "metro": "sy",
            "operating_system": "custom_ipxe",
            "billing_cycle": "hourly",
            "spot_instance": true,
            "spot_price_max": 0.11,
            "ipxe_script_url": "{{ ipxe_script_master }}"
          }
      register: instance_result
      with_items:
        - master01.heavy-metal.digitaldovey.net
        - master02.heavy-metal.digitaldovey.net
        - master03.heavy-metal.digitaldovey.net
      when: item not in existing_instances
      failed_when: instance_result.status != 201

